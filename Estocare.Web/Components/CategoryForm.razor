@using Estocare.Web.Models.DTOs
@using Estocare.Web.Services
@inject CategoryService CategoryService

<EditForm Model="categoryModel" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Nome da Categoria:</label>
        <InputText @bind-Value="categoryModel.Name" class="form-control" />
    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Salvar</button>
        @if (OnCancel.HasDelegate)
        {
            <button type="button" class="btn btn-secondary ms-2" @onclick="() => OnCancel.InvokeAsync()">Cancelar</button>
        }
    </div>
</EditForm>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger mt-3">@ErrorMessage</div>
}

@code {
    [Parameter] public CategoryDto? CategoryToEdit { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public EventCallback OnSaveSuccess { get; set; }

    private CreateCategoryDto categoryModel = new CreateCategoryDto();
    private string? ErrorMessage;

    protected override void OnParametersSet()
    {
        if (CategoryToEdit != null)
        {
            // Preenche o modelo com os dados da categoria a ser editada
            categoryModel = new CreateCategoryDto
                {
                    Name = CategoryToEdit.Name
                };
        }
        else
        {
            // Resetar o modelo para criação
            categoryModel = new CreateCategoryDto();
        }
    }

    private async Task HandleSubmit()
    {
        try
        {
            if (CategoryToEdit == null)
            {
                // Criação de uma nova categoria
                await CategoryService.CreateCategoryAsync(categoryModel);
                Console.WriteLine("Categoria criada com sucesso!");
            }
            else
            {
                // Atualização da categoria existente
                var updateCategoryDto = new UpdateCategoryDto
                    {
                        Name = categoryModel.Name
                    };

                await CategoryService.UpdateCategoryAsync(CategoryToEdit.Id, updateCategoryDto);
                Console.WriteLine("Categoria atualizada com sucesso!");
            }

            // Reseta o formulário
            categoryModel = new CreateCategoryDto();

            // Chama o callback de sucesso
            await OnSaveSuccess.InvokeAsync();
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Erro ao salvar a categoria: {ex.Message}";
            Console.WriteLine(ErrorMessage);
        }
    }
}
